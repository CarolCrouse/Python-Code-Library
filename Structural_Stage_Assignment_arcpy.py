import os, sys, csvimport arcpy
from arcpy import env  # WHAT DOES THIS DO?#import xl#import pandas as pd            ########################################## Nov 27, 2018# This program assigns structural stage codes to VRI polygons based on VRI fields.# It fills in a new field called STRUC_CODE#########################################ws = "C:\\Working_Files\\Example_Python_Code\\Test_Data_Set.gdb\\"#Create list of geodatabase layerslayerList = ['VRI_test_set']################################ ADD FIELD ########   THIS SECTION ADDING A COLUMN IS NOT WORKING YET###########################def addFIELD():#       for fc in layerList:#               outFeaturePath = ws + fc#               outLayer = fc + "_layer"##               arcpy.MakeFeatureLayer_management(outFeaturePath, outLayer)##               print "Adding fields"##               arcpy.AddField_management(outLayer, "STRUC_CODE", "TEXT", "", "", 5)				##################################### CALCULATE FIELD ####################################### #def addSC():for fc in layerList: #layerList is the feature class [VRI_test_set_sm] within the open gdb	print "Calculating Structural Code"	outFeaturePath = ws + fc  #this is "C:\\Working_Files\\Example_Python_Code\\Test_Data_Set.gdb\\" + fc	outLayer = fc + "_layer"  #this sets the output feature class layer to be fc & "_layer" 	arcpy.MakeFeatureLayer_management(outFeaturePath, outLayer)	rows = arcpy.UpdateCursor(outLayer)  #this updates the output feature class										 #arcpy function that creates a cursor that lets you update or delete rows on the specified feature class, shapefile, or table. 										 #The cursor places a lock on the data that will remain until either the script completes or the update cursor object is deleted.		for row in rows:   #this goes through the records			test_var = 'XXX'  # initialize a variable as XXX						# STRUCTURAL CODE 1		if row.BCLCS_LEVEL_4 == 'BM' or row.BCLCS_LEVEL_4 == 'BY' or row.BCLCS_LEVEL_4 == 'EL' or row.BCLCS_LEVEL_4 == 'RO' or row.BCLCS_LEVEL_4 == 'SI':
			if test_var == 'XXX':				if row.NON_VEG_COVER_TYPE_1 == 'AP' or row.NON_VEG_COVER_TYPE_1 == 'BE' or row.NON_VEG_COVER_TYPE_1 == 'BR' or row.NON_VEG_COVER_TYPE_1 == 'CB' or row.NON_VEG_COVER_TYPE_1 == 'ES' or row.NON_VEG_COVER_TYPE_1 == 'GL' or row.NON_VEG_COVER_TYPE_1 == 'GP' or row.NON_VEG_COVER_TYPE_1 == 'LA' or row.NON_VEG_COVER_TYPE_1 == 'LL' or row.NON_VEG_COVER_TYPE_1 == 'LS' or row.NON_VEG_COVER_TYPE_1 == 'MI' or row.NON_VEG_COVER_TYPE_1 == 'MN' or row.NON_VEG_COVER_TYPE_1 == 'MU' or row.NON_VEG_COVER_TYPE_1 == 'OT' or row.NON_VEG_COVER_TYPE_1 == 'PN' or row.NON_VEG_COVER_TYPE_1 == 'RN' or row.NON_VEG_COVER_TYPE_1 == 'RE' or row.NON_VEG_COVER_TYPE_1 == 'RI' or row.NON_VEG_COVER_TYPE_1 == 'RM' or row.NON_VEG_COVER_TYPE_1 == 'RN' or row.NON_VEG_COVER_TYPE_1 == 'RS' or row.NON_VEG_COVER_TYPE_1 == 'RZ' or row.NON_VEG_COVER_TYPE_1 == 'TA' or row.NON_VEG_COVER_TYPE_1 == 'UR':					if row.CROWN_CLOSURE < 10:						test_var = '1'						row.STRUC_CODE = '1'						rows.updateRow(row)													# STRUCTURAL CODE 2				if row.BCLCS_LEVEL_4 == 'HE' or row.BCLCS_LEVEL_4 == 'HF' or row.BCLCS_LEVEL_4 == 'HG':			if test_var == 'XXX': 				if row.herb_cover_type == 'HE' or row.herb_cover_type == 'HF' or row.herb_cover_type == 'HG':					if row.HARVEST_DATE <> None or row.EARLIEST_NONLOGGING_DIST_TYPE == 'B':					#if row.EARLIEST_NONLOGGING_DIST_TYPE == 'B':						if row.HERB_COVER_PCT > row.SHRUB_CROWN_CLOSURE:							if row.CROWN_CLOSURE < 10:								if row.PROJ_AGE_1 < 20:									if row.PROJ_HEIGHT_1 < 2:										test_var = '2'										row.STRUC_CODE = '2'    										rows.updateRow(row)		# STRUCTURAL STAGE CODE 3a				if row.BCLCS_LEVEL_4 == 'SL':			if test_var == 'XXX':				if row.SHRUB_HEIGHT < 2:					if row.HARVEST_DATE <> None or row.EARLIEST_NONLOGGING_DIST_TYPE == 'B':						if row.SHRUB_CROWN_CLOSURE > row.HERB_COVER_PCT:							if row.CROWN_CLOSURE < 10:								if row.PROJ_AGE_1 < 20:									if row.PROJ_HEIGHT_1 < 2:										test_var = '3a'										row.STRUC_CODE = '3a'										rows.updateRow(row)		# STRUCTURAL STAGE CODE 3b				if row.BCLCS_LEVEL_4 ==  'ST':			if test_var == 'XXX':				if row.SHRUB_HEIGHT >= 2 and row.SHRUB_HEIGHT <= 10:					if row.HARVEST_DATE <> None or row.EARLIEST_NONLOGGING_DIST_TYPE == 'B':						if row.SHRUB_CROWN_CLOSURE > row.HERB_COVER_PCT:							if row.CROWN_CLOSURE < 10:								if row.PROJ_AGE_1 < 20:									if row.PROJ_HEIGHT_1 >= 2 and row.PROJ_HEIGHT_1 <= 10:										test_var = '3b'										row.STRUC_CODE = '3b'										rows.updateRow(row)                                                                                             				# STRUCTURAL STAGE CODE 4, 5, 6, 7				if row.BCLCS_LEVEL_4 ==  'TB' or row.BCLCS_LEVEL_4 == 'TC' or row.BCLCS_LEVEL_4 == 'TM':			if test_var == 'XXX':				if row.CROWN_CLOSURE >= 10:					if row.VRI_LIVE_STEMS_PER_HA >= 5000:						if row.PROJ_HEIGHT_1 >= 10:							test_var = '4'							row.STRUC_CODE = '4'							rows.updateRow(row)						else:							test_var = '3b'							row.STRUC_CODE = '3b'							rows.updateRow(row)					elif row.VRI_LIVE_STEMS_PER_HA < 5000:						if row.PROJ_AGE_1 >= 20 and row.PROJ_AGE_1 < 40:							if row.PROJ_HEIGHT_1 >= 10:								test_var = '4'								row.STRUC_CODE = '4'								rows.updateRow(row)							elif row.PROJ_HEIGHT_1 < 10:								test_var = '3b'								row.STRUC_CODE = '3b'								rows.updateRow(row)						elif row.PROJ_AGE_1 >= 40 and row.PROJ_AGE_1 < 80:							if row.PROJ_HEIGHT_1 >= 10:								test_var = '5'								row.STRUC_CODE = '5'								rows.updateRow(row)							elif row.PROJ_HEIGHT_1 < 10:								test_var = '3b'								row.STRUC_CODE = '3b'								rows.updateRow(row)						elif row.PROJ_AGE_1 >= 80:							if row.BEC_ZONE_CODE == 'BWBS':								if row.PROJ_AGE_1 < 140:									if row.PROJ_HEIGHT_1 >= 10:										test_var = '6'										row.STRUC_CODE = '6'										rows.updateRow(row)									elif row.PROJ_HEIGHT_1 < 10:										test_var = '3b'										row.STRUC_CODE = '3b'										rows.updateRow(row)								elif row.PROJ_AGE_1 >= 140:									if row.PROJ_HEIGHT_1 >= 10:										test_var = '7'										row.STRUC_CODE = '7'										rows.updateRow(row)									elif row.PROJ_HEIGHT_1 < 10:										test_var = '3b'										row.STRUC_CODE = '3b'										rows.updateRow(row)							elif row.BEC_ZONE_CODE == 'ESSF' or row.BEC_ZONE_CODE == 'SWB':								if row.PROJ_AGE_1 < 250:									if row.PROJ_HEIGHT_1 >= 10:										test_var = '6'										row.STRUC_CODE = '6'										rows.updateRow(row)									elif row.PROJ_HEIGHT_1 < 10:										test_var = '3b'										row.STRUC_CODE = '3b'										rows.updateRow(row)								elif row.PROJ_AGE_1 >= 250:									if row.PROJ_HEIGHT_1 >= 10:										test_var = '7'										row.STRUC_CODE = '7'										rows.updateRow(row)									elif row.PROJ_HEIGHT_1 < 10:										test_var = '3b'										row.STRUC_CODE = '3b'										rows.updateRow(row)                                                                                             		if test_var == 'XXX':			row.STRUC_CODE = test_var			rows.updateRow(row) 		del row  # WHAT DOES THIS DOdel rowsrows = arcpy.UpdateCursor(outLayer)  # WHY RUN THIS AGAIN?#addFIELD()#addSC()                